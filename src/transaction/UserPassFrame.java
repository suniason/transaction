/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package transaction;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author steps on sale
 */
public class UserPassFrame extends javax.swing.JFrame {

    /**
     * Creates new form UserPassFrame
     */
    float deposit;
    String acctype;
    String name;
    Connection con = null;
    public UserPassFrame(float deposit1,String acctype1,String name1) {
        initComponents();
        deposit= deposit1;
        acctype = acctype1;
        name = name1; 
        
    }

    private UserPassFrame() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConfirm = new javax.swing.JButton();
        txtUser = new javax.swing.JTextField();
        txtPin = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtConfirmPin = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnConfirm.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter New PIN:");

        jLabel3.setText("Enter New Username:");

        jLabel2.setText("Confirm New PIN:");

        jLabel4.setFont(new java.awt.Font("Verdana", 3, 24)); // NOI18N
        jLabel4.setText("PayParrot");

        txtBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtBack.setText("Back");
        txtBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtConfirmPin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtUser)
                                        .addComponent(txtPin, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtBack, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel4)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm)
                    .addComponent(txtBack))
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public boolean checkPin(){
        if(txtPin.getText() != txtConfirmPin.getText()){
            return true;
        }
        return false;
    }
    
    
    public void createAccount(String uname, String pword, float deposit){
        try{
            //connect to db
            con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbbankproject", "root", "");
            //set uname and pword
           
            
            //sql query
            String sql="insert into account (uname,pword,balance) values('"+uname+"','"+pword+"','"+deposit+"')";
            Statement stmt=con.prepareStatement(sql);
            stmt.execute(sql);
            
        }catch(Exception e){
                JOptionPane.showMessageDialog(this,e.toString());
        }
    }
    public int getAccountID(String uname){
        int account_id = 0;
        try{
            //connect to db
            con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbbankproject", "root", "");
            
            //sql query
            String sql="SELECT account_id from account where uname = '"+uname+"'";
            Statement stmt=con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            account_id = rs.getInt("account_id");
        }catch(Exception e){
                JOptionPane.showMessageDialog(this,e.toString());
        }
        return account_id;
    }
    public boolean isExistingAccount(String uname){
        boolean existing = false;
        
        try{
            //connect to db
            con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbbankproject", "root", "");
            
            //sql query
            String sql="select * from account where uname ='"+uname+"'";
            Statement stmt=con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery(sql);
            
            if(rs.next())
                existing = true;
        }catch(Exception e){
                JOptionPane.showMessageDialog(this,e.toString());
        }
        
        return existing;
    }
    public void createAccountType(int account_id, String acctype, String name){
        String sql1;
        Statement stmt1;
        try{
            //connect to db
            con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbbankproject", "root", "");
            
            //sql query
            switch(acctype){
                case "saver":
                    sql1 = "insert into saver (account_id,name) values('"+account_id+"','"+name+"')";
                    stmt1=con.prepareStatement(sql1);
                    stmt1.execute(sql1);
                    break;
                case "salary":
                    sql1 = "insert into salary (account_id,name) values('"+account_id+"','"+name+"')";
                    stmt1=con.prepareStatement(sql1);
                    stmt1.execute(sql1);
                    break;
                case "checkings":
                    sql1 = "insert into checkings (account_id,name) values('"+account_id+"','"+name+"')";
                    stmt1=con.prepareStatement(sql1);
                    stmt1.execute(sql1);
                    break;
            }
        }catch(Exception e){
                JOptionPane.showMessageDialog(this,e.toString());
        }
        
    }
    public void createDepositRecord(int account_id, float deposit){
        try{
            //connect to db
            con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbbankproject", "root", "");
            
            //sql query
            String sql1="insert into deposit (account_id,amount) values('"+account_id+"','"+deposit+"')";
            Statement stmt1=con.createStatement();
            stmt1.execute(sql1);
            
        }catch(Exception e){
                JOptionPane.showMessageDialog(this,e.toString());
        }
    }
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        String pword = String.valueOf(txtPin.getPassword());
        String uname = txtUser.getText();
            
        if(checkPin()){
            if(!isExistingAccount(uname)){
                //create account and put info to account table.
                createAccount(uname, pword, deposit);
                ///get account_id of account that was just created.
                int account_id = getAccountID(uname);
                //use acctype to determine which table to create new record
                createAccountType(account_id,acctype,name);
                //create initial deposit record
                createDepositRecord(account_id,deposit);    
                    
               JOptionPane.showMessageDialog(this,"Account created!");
               }else{
                   JOptionPane.showMessageDialog(this,"Username already existing");
               }
            System.exit(1);
        }
 
        
//        DashboardFrame dash = new DashboardFrame();
//        dash.show();
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void txtBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBackActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_txtBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPassFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPassFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPassFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPassFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPassFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton txtBack;
    private javax.swing.JPasswordField txtConfirmPin;
    private javax.swing.JPasswordField txtPin;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
